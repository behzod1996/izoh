name: Android CI

on:
  push:
    branches: [ "master" ]
    tags:
      - v*
  pull_request:
    branches: [ "master" ]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true


jobs:
  lint:
    name: ktlint
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3.1.0
      - name: Set up JDK 11
        uses: actions/setup-java@v3.6.0
        with:
          distribution: adopt
          java-version: 11
      - uses: ./.github/workflows/gradle-caches
        with:
          key-prefix: gradle-lint
      - name: Spotless
        run: ./gradlew spotlessCheck --scan
      - name: Ktlint
        run: ./gradlew ktlintCheck --scan
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3.1.0
      - name: Set up JDK 11
        uses: actions/setup-java@v3.6.0
        with:
          distribution: adopt
          java-version: 11
      - uses: ./.github/workflows/gradle-caches
        with:
          key-prefix: gradle-build
      - name: Build
        run: ./gradlew assembleDebug --scan
  test:
    name: Unit tests
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3.1.0
      - name: Set up JDK 11
        uses: actions/setup-java@v3.6.0
        with:
          distribution: adopt
          java-version: 11
      - uses: ./.github/workflows/gradle-caches
        with:
          key-prefix: gradle-test
      - name: Unit tests
        run: ./gradlew test
      - name: Upload test results
        uses: actions/upload-artifact@v3.1.0
        if: failure()
        with:
          name: testDebugUnitTest
          path: ./**/build/reports/tests/testDebugUnitTest
    create-release:
      name: Create release
      needs: [lint, build, test]
      runs-on: ubuntu-latest

      steps:
        - name: Run build release artifacts
          run: ./gradlew assembleRelease --stacktrace
        - name: Run bundle release
          run: ./gradlew bundleRelease
        - name: Download APK
          uses: actions/download-artifact@v1
          with:
              name: apk
        - name: Download Bundle
          uses: actions/download-artifact@v1
          with:
              name: bundle
        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            pre_release: false
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
        - name: Upload Release APK
          id: upload_release_apk
          uses: actions/upload-release-asset@v1.0.1
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: apk/app-releaseUnsigned-unsigned.apk
              asset_name: ${{ github.event.repository.name }}.aab
              asset_content_type: application/zip
        - name: Upload Release AAB
          id: upload_release_aab
          uses: actions/upload-release-asset@v1.0.1
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: bundle/app-release.aab
              asset_name: ${{ github.event.repository.name }}.aab
              asset_content_type: application/zip

