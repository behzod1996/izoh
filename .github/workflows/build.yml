name: Android CI

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "master" ]


concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true


jobs:
  lint:
    name: ktlint
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3.1.0
      - name: Set up JDK 11
        uses: actions/setup-java@v3.6.0
        with:
          distribution: adopt
          java-version: 11
      - uses: ./.github/workflows/gradle-caches
        with:
          key-prefix: gradle-lint
      - name: Spotless
        run: ./gradlew spotlessCheck --scan
      - name: Ktlint
        run: ./gradlew ktlintCheck --scan
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3.1.0
      - name: Set up JDK 11
        uses: actions/setup-java@v3.6.0
        with:
          distribution: adopt
          java-version: 11
      - uses: ./.github/workflows/gradle-caches
        with:
          key-prefix: gradle-build
      - name: Build
        run: ./gradlew assembleDebug --scan
  test:
    name: Unit tests
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3.1.0
      - name: Set up JDK 11
        uses: actions/setup-java@v3.6.0
        with:
          distribution: adopt
          java-version: 11
      - uses: ./.github/workflows/gradle-caches
        with:
          key-prefix: gradle-test
      - name: Unit tests
        run: ./gradlew test
      - name: Upload test results
        uses: actions/upload-artifact@v3.1.0
        if: failure()
        with:
          name: testDebugUnitTest
          path: ./**/build/reports/tests/testDebugUnitTest
  create-release:
      permissions: write-all
      name: Create Release
      needs: [lint, build, test]
      runs-on: ubuntu-latest

      if: contains(github.ref, 'tags/')
      steps:
        - name: Prepare Release
            # set id for get output tag_name
            # steps.prepare_release.outputs.tag_name
          id: prepare_release
          run: |
              TAG_NAME=`echo $GITHUB_REF | cut -d / -f3`
              echo ::set-output name=tag_name::$TAG_NAME

        - name: Download Archiver File
          if: steps.prepare_release.outputs.tag_name
          uses: actions/download-artifact@v2
          with:
             # download archiver file
             name: termux-sdl-debug

        # create release
        - name: Create Release
          id: create_release
          # check tag_name
          if: ${{ steps.prepare_release.outputs.tag_name }}
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ steps.prepare_release.outputs.tag_name }}
            release_name: Izoh ${{ steps.prepare_release.outputs.tag_name }}
            body: |
              What's Changed
              - Fix script
              - Change the group id
            draft: false
            prerelease: false


